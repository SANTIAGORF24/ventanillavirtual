import React, { useState, useEffect } from "react";

export function NewBanner({
  onConsultClick,
  onRegisterClick,
  onPqrsClick,
  onTramitesClick,
  onOpasClick,
  onConsultasClick,
  onDenunciasClick,
  onSolicitudesClick,
}) {
  const [showSubButtons, setShowSubButtons] = useState(false);
  const [activeButton, setActiveButton] = useState(null);
  const [selectedOption, setSelectedOption] = useState("");

  useEffect(() => {
    setActiveButton(null);
    setShowSubButtons(false);
  }, []);

  const handleRegisterClick = () => {
    setShowSubButtons(!showSubButtons);
    if (onRegisterClick) onRegisterClick();
    setActiveButton("register");
  };

  const handleConsultClick = () => {
    setShowSubButtons(false);
    if (onConsultClick) onConsultClick();
    setActiveButton("consult");
  };

  const handleSelectChange = (event) => {
    const value = event.target.value;
    setSelectedOption(value);

    switch (value) {
      case "tramites":
        onTramitesClick && onTramitesClick();
        break;
      case "opas":
        onOpasClick && onOpasClick();
        break;
      case "consultas":
        onConsultasClick && onConsultasClick();
        break;
      case "denuncias":
        onDenunciasClick && onDenunciasClick();
        break;
      case "solicitudes":
        onSolicitudesClick && onSolicitudesClick();
        break;
      case "pqrs":
        onPqrsClick && onPqrsClick();
        break;
      default:
        break;
    }
  };

  const buttonStyle = (isActive) => `
    ${
      isActive
        ? "bg-white text-[#3367d6] border-[#3367d6] border-2"
        : "bg-[#3367d6] text-white"
    } 
    text-lg font-bold py-4 px-6 rounded
    transition-colors duration-300
    ${
      isActive
        ? "hover:bg-white hover:text-[#3367d6] hover:border-[#3367d6]"
        : "hover:bg-white hover:text-[#3367d6]"
    }
  `;

  const getTooltipText = () => {
    switch (selectedOption) {
      case "pqrs":
        return "Toda persona tiene derecho a presentar peticiones respetuosas a las autoridades por motivos de interés general o particular y a obtener pronta resolución de acuerdo a lo establecido en el Código de Procedimiento Administrativo y de lo Contencioso Administrativo, reglamentado por la Ley 1755 de 2015.";
      case "denuncias":
        return "Dato que busca poner en conocimiento o dejar constancia ante las autoridades respectivas de un hecho o acción que se ha producido en contravía de las disposiciones legales o reglamentarias.";
      case "consultas":
        return "Documento en el que se indica la situación de la Personería Jurídica de los organismos deportivos así como también la persona natural que ostenta la representación legal de los mencionados organismos deportivos, incluyendo relación de integrantes del Órgano de Administración y del Órgano de Control.";
      case "solicitudes":
        return "Facultad que tienen las personas naturales y jurídicas de solicitar certificaciones de contratos celebrados con la Entidad. Se deben indicar los siguientes datos: Número de Contrato, año, nombre del titular del contrato, documento de identidad. Si requiere que la certificación de contrato contenga algún tipo de información específica deberá señalarlo y describir el contenido que debe llevar.";
      case "tramites":
        return "Trámites del ministerio del deporte.";
      case "opas":
        return "Servicios que presta el ministerio del deporte.";
      default:
        return "";
    }
  };

  const getOptionTitle = () => {
    switch (selectedOption) {
      case "pqrs":
        return "Derecho de petición";
      case "denuncias":
        return "Denuncias";
      case "consultas":
        return "Consultas de acceso a información pública";
      case "solicitudes":
        return "Solicitud de certificación";
      case "tramites":
        return "Trámites";
      case "opas":
        return "Servicios";
      default:
        return "";
    }
  };

  return (
    <div className="flex flex-col items-center">
      <h1 className="text-[#3367d6] text-4xl font-bold text-center w-full py-4 mb-4">
        Ventanilla Virtual
        <br />
        Ministerio del Deporte
      </h1>
      <div className="bg-gray-100 border border-gray-300 p-6 rounded-lg text-left text-sm w-4/6 shadow-md">
        <p className="mb-4 leading-relaxed">
          El{" "}
          <span className="font-semibold text-[#3367d6]">
            Ministerio del Deporte
          </span>{" "}
          pone a disposición de la ciudadanía el siguiente formulario
          electrónico a través del cual podrá consultar o registrar sus{" "}
          <span className="font-medium">
            solicitudes, quejas, reclamos, sugerencias, felicitaciones o
            denuncias
          </span>{" "}
          relacionadas con cualquier trámite o servicio dentro de nuestra
          competencia.
        </p>
        <p className="mb-4 leading-relaxed">
          Asegúrese de proporcionar toda la información necesaria para poder
          atender su solicitud de manera efectiva.
        </p>
        <p className="leading-relaxed">
          Los campos marcados con{" "}
          <span className="text-red-500 font-bold">*</span> son{" "}
          <span className="font-medium">obligatorios</span>. En caso de falla
          del sistema, infórmelo y empiece el diligenciamiento nuevamente del
          formulario en este punto.
        </p>
      </div>

      <div className="flex flex-col sm:flex-row justify-center items-center w-full py-8 space-y-4 sm:space-y-0 sm:space-x-4 px-4">
        <button
          onClick={handleConsultClick}
          className={buttonStyle(activeButton === "consult")}
        >
          Consulte aquí sus solicitudes
        </button>
        <button
          onClick={handleRegisterClick}
          className={buttonStyle(activeButton === "register")}
        >
          Registre aquí su solicitud
        </button>
        <a
          href="https://www.procuraduria.gov.co/PQRSDF/Pages/solicitud_informacion_identificacion_reservada.aspx"
          className="inline-block w-full sm:w-1/3"
        >
          <button className={buttonStyle(activeButton === "requestInfo")}>
            Solicitud de información con identificación reservada
          </button>
        </a>
      </div>
      {showSubButtons && (
        <>
          <div className="bg-gray-100 border border-gray-300 p-4 rounded-lg text-left text-sm w-4/6">
            <h2 className="text-[#3367d6] text-lg font-bold">Información</h2>
            <p>
              El Ministerio del Deporte le informa que, al momento de enviar su
              solicitud, usted está aceptando el manejo de sus datos personales,
              el cual se realiza conforme a lo establecido en nuestra
              <a href="#" className="text-[#3367d6] underline">
                Política de Protección de Datos Personales
              </a>
              .
            </p>
            <p>
              Si usted no tiene certeza sobre el tipo de petición a ingresar,
              consulte el documento de ayuda
              <a href="#" className="text-[#3367d6] underline">
                aquí
              </a>
              .
            </p>
            <p>
              Los campos marcados con * son obligatorios. En caso de falla del
              sistema, infórmelo y empiece el diligenciamiento nuevamente del
              formulario en este punto.
            </p>
          </div>
          <div className="flex flex-col items-center w-4/6 py-8 px-4">
            <label
              htmlFor="tipo-solicitud"
              className="block text-[#3367d6] text-lg font-bold mb-2"
            >
              Tipo de solicitud
              <span
                className="relative inline-block ml-2 cursor-pointer"
                onMouseEnter={(e) => {
                  const tooltip = e.currentTarget.querySelector(".tooltip");
                  if (tooltip) tooltip.style.display = "block";
                }}
                onMouseLeave={(e) => {
                  const tooltip = e.currentTarget.querySelector(".tooltip");
                  if (tooltip) tooltip.style.display = "none";
                }}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="h-5 w-5 text-[#3367d6]"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  <circle cx="12" cy="12" r="10" />
                  <line x1="12" y1="16" x2="12" y2="12" />
                  <line x1="12" y1="8" x2="12" y2="8" />
                </svg>
                <div
                  className="tooltip absolute bg-gray-800 text-white text-xs rounded py-1 px-2"
                  style={{
                    display: "none",
                    top: "100%",
                    left: "50%",
                    transform: "translateX(-50%)",
                    marginTop: "5px",
                    width: "200px",
                  }}
                >
                  {getTooltipText()}
                </div>
              </span>
            </label>
            <select
              id="tipo-solicitud"
              value={selectedOption}
              onChange={handleSelectChange}
              className="block w-full p-2 border border-gray-300 rounded"
            >
              <option value="">Seleccione</option>
              <option value="pqrs">Derecho de petición</option>
              <option value="denuncias">Denuncias</option>
              <option value="consultas">
                Consultas de acceso a información pública
              </option>
              <option value="solicitudes">Solicitud de certificación</option>
              <option value="tramites">Trámites</option>
              <option value="opas">Servicios</option>
            </select>
          </div>
          {selectedOption && (
            <div className="bg-blue-100 border border-gray-300 p-6 rounded-lg text-left text-sm w-4/6 shadow-md mt-4">
              <h3 className="text-[#3367d6] text-lg font-bold mb-2">
                {getOptionTitle()}
              </h3>
              <p className="leading-relaxed">
                {getTooltipText()}
              </p>
            </div>
          )}
        </>
      )}
    </div>
  );
}
